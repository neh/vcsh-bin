#!/usr/bin/env python3

import sys
from subprocess import check_output, call
import math
import os.path

try:
    # TODO make arbitrary step sizes actually work
    STEP = int(sys.argv[2])
except IndexError:
    STEP = 10

if os.path.exists('/usr/bin/light'):
    METHOD = 'light'
elif os.path.exists('/usr/bin/xbacklight'):
    METHOD = 'xbacklight'
else:
    sys.exit('No backlight adjustment tool found.')

def get_current():
    if METHOD == 'light':
        return int(float((check_output(['light', '-G']).rstrip().decode())))
    elif METHOD == 'xbacklight':
        return int(float((check_output(['xbacklight', '-get']).rstrip().decode())))

def set_brightness(brightness):
    if METHOD == 'light':
        call(['light', '-S', target])
    elif METHOD == 'xbacklight':
        call(['xbacklight', '-set', target])

try:
    direction = sys.argv[1]
except IndexError:
    sys.exit("You need to pass a command like 'up' or 'down'.")

if direction in ['inc', 'up']:
    target = get_current() + STEP
elif direction in ['dec', 'down']:
    target = get_current() - STEP
elif int(direction):
    target = int(direction)

if target % STEP < 5:
    target = str(int(math.floor(target / STEP)) * STEP)
    set_brightness(target)
else:
    target = str(int(math.ceil(target / STEP)) * STEP)
    set_brightness(target)
